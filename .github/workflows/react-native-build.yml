name: React Native Builds (Android/iOS/Windows/macOS)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  android:
    name: Android APK
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: react-native/apps/mobile
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - name: Install Node dependencies
        run: |
          if [ -f package.json ]; then
            if [ -f package-lock.json ]; then npm ci; else npm install; fi
          fi
      - name: Make Gradle wrapper executable (Linux)
        run: |
          if [ -d android ] && [ -f android/gradlew ]; then
            chmod +x android/gradlew
          fi
      - name: Prepare Android
        run: |
          cd android || exit 0
          chmod +x gradlew || true
          ./gradlew --no-daemon tasks || true
      - name: Build Debug APK
        run: |
          if [ -d android ]; then
            cd android
            chmod +x gradlew || true
            ./gradlew --no-daemon assembleDebug
          else
            echo "Android project not initialized; skipping"
          fi
      - name: Build Release APK/AAB
        run: |
          if [ -d android ]; then
            cd android
            chmod +x gradlew || true
            ./gradlew --no-daemon assembleRelease bundleRelease
          else
            echo "Android project not initialized; skipping"
          fi
      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            react-native/apps/mobile/android/app/build/outputs/apk/debug/**/*.apk
            react-native/apps/mobile/android/app/build/outputs/apk/release/**/*.apk
          if-no-files-found: warn
      - name: Upload AAB
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: |
            react-native/apps/mobile/android/app/build/outputs/bundle/release/**/*.aab
          if-no-files-found: warn
      - name: Create diagnostics
        run: |
          mkdir -p build-diagnostics
          echo "Android job summary" > build-diagnostics/summary.txt
          echo "Android dir present: $([ -d android ] && echo yes || echo no)" >> build-diagnostics/summary.txt
          echo "Gradle cache: $HOME/.gradle" >> build-diagnostics/summary.txt
      - name: Upload diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-diagnostics
          path: build-diagnostics/**
          if-no-files-found: warn

  ios:
    name: iOS Archive
    runs-on: macos-13
    defaults:
      run:
        working-directory: react-native/apps/mobile
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Node dependencies
        run: |
          if [ -f package.json ]; then
            if [ -f package-lock.json ]; then npm ci; else npm install; fi
          fi
      - name: Install CocoaPods
        run: |
          if [ -d ios ]; then
            cd ios
            pod install --silent || pod install
          else
            echo "iOS project not initialized; skipping"
          fi
      - name: Build iOS (Debug simulator)
        run: |
          if [ -d ios ]; then
            xcodebuild -workspace ios/*.xcworkspace -scheme mobile -configuration Debug -sdk iphonesimulator -derivedDataPath build || true
          else
            echo "iOS project not initialized; skipping"
          fi
      - name: Build iOS (Release device archive)
        run: |
          if [ -d ios ]; then
            # Note: Code signing is required for real .ipa export; we create an .xcarchive artifact only
            xcodebuild -workspace ios/*.xcworkspace -scheme mobile -configuration Release -sdk iphoneos -derivedDataPath build -archivePath build/App.xcarchive archive || true
          else
            echo "iOS project not initialized; skipping"
          fi
      - name: Upload iOS build products
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: |
            react-native/apps/mobile/build
          if-no-files-found: warn
      - name: Create diagnostics
        run: |
          mkdir -p build-diagnostics
          echo "iOS job summary" > build-diagnostics/summary.txt
          echo "iOS dir present: $([ -d ios ] && echo yes || echo no)" >> build-diagnostics/summary.txt
          xcodebuild -version >> build-diagnostics/summary.txt || true
      - name: Upload diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-diagnostics
          path: build-diagnostics/**
          if-no-files-found: warn

  windows:
    name: Windows App
    runs-on: windows-latest
    defaults:
      run:
        working-directory: react-native/apps/desktop
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Node dependencies
        shell: pwsh
        run: |
          if (Test-Path package.json) {
            if (Test-Path package-lock.json) { npm ci } else { npm install }
          }
      - name: Build Windows (Debug)
        shell: pwsh
        run: |
          if (Test-Path windows) {
            msbuild .\windows\*.sln /p:Configuration=Debug /m
          } else {
            Write-Host "Windows project not initialized; skipping"
          }
      - name: Package Windows (Release, msix if possible)
        shell: pwsh
        run: |
          if (Test-Path windows) {
            msbuild .\windows\*.sln /p:Configuration=Release /p:AppxBundle=Always /p:UapAppxPackageBuildMode=SideloadOnly /m
          } else {
            Write-Host "Windows project not initialized; skipping"
          }
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            react-native/apps/desktop/windows/**/AppPackages/**/*
            react-native/apps/desktop/windows/**/Debug*/**/*
          if-no-files-found: warn
      - name: Create diagnostics
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path build-diagnostics | Out-Null
          "Windows job summary" | Out-File -FilePath build-diagnostics/summary.txt -Encoding utf8
          "Windows dir present: $((Test-Path windows) -as [string])" | Add-Content build-diagnostics/summary.txt
          cmd /c ver | Add-Content build-diagnostics/summary.txt
      - name: Upload diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-diagnostics
          path: build-diagnostics/**
          if-no-files-found: warn

  macos:
    name: macOS App
    runs-on: macos-13
    defaults:
      run:
        working-directory: react-native/apps/desktop
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Node dependencies
        run: |
          if [ -f package.json ]; then
            if [ -f package-lock.json ]; then npm ci; else npm install; fi
          fi
      - name: Install CocoaPods (macOS)
        run: |
          if [ -d macos ]; then
            cd macos
            pod install --silent || pod install
          else
            echo "macOS project not initialized; skipping"
          fi
      - name: Build macOS (Debug)
        run: |
          if [ -d macos ]; then
            xcodebuild -workspace macos/*.xcworkspace -scheme desktop -configuration Debug -derivedDataPath build || true
          else
            echo "macOS project not initialized; skipping"
          fi
      - name: Build macOS (Release)
        run: |
          if [ -d macos ]; then
            xcodebuild -workspace macos/*.xcworkspace -scheme desktop -configuration Release -derivedDataPath build || true
          else
            echo "macOS project not initialized; skipping"
          fi
      - name: Zip macOS .app products
        run: |
          mkdir -p build-zips
          if compgen -G "build/Build/Products/Debug/*.app" > /dev/null; then
            (cd build/Build/Products/Debug && for app in *.app; do zip -r "../../../../build-zips/${app%.app}-Debug-macos.zip" "$app" >/dev/null; done)
          fi
          if compgen -G "build/Build/Products/Release/*.app" > /dev/null; then
            (cd build/Build/Products/Release && for app in *.app; do zip -r "../../../../build-zips/${app%.app}-Release-macos.zip" "$app" >/dev/null; done)
          fi
      - name: Upload macOS build products
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            react-native/apps/desktop/build
            react-native/apps/desktop/build-zips/*.zip
          if-no-files-found: warn
      - name: Create diagnostics
        run: |
          mkdir -p build-diagnostics
          echo "macOS job summary" > build-diagnostics/summary.txt
          echo "macOS dir present: $([ -d macos ] && echo yes || echo no)" >> build-diagnostics/summary.txt
          xcodebuild -version >> build-diagnostics/summary.txt || true
      - name: Upload diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: macos-diagnostics
          path: build-diagnostics/**
          if-no-files-found: warn

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [android, ios, windows, macos]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Ensure zip installed
        run: |
          sudo apt-get update
          sudo apt-get install -y zip

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          # Android APKs
          if compgen -G "artifacts/android-apk/**/*.apk" > /dev/null; then
            find artifacts/android-apk -type f -name "*.apk" -exec cp {} release-assets/ \;
          fi
          # Zip iOS build dir if exists
          if [ -d artifacts/ios-build ]; then
            (cd artifacts && zip -r ../release-assets/ios-build.zip ios-build >/dev/null)
          fi
          # Zip Windows build dir if exists
          if [ -d artifacts/windows-build ]; then
            (cd artifacts && zip -r ../release-assets/windows-build.zip windows-build >/dev/null)
          fi
          # Zip macOS build dir if exists
          if [ -d artifacts/macos-build ]; then
            (cd artifacts && zip -r ../release-assets/macos-build.zip macos-build >/dev/null)
          fi
          ls -al release-assets || true
      - name: Check for assets
        id: check
        run: |
          COUNT=$(ls -1 release-assets | wc -l | tr -d ' ')
          echo "found=$COUNT" >> $GITHUB_OUTPUT
          if [ "$COUNT" -eq 0 ]; then
            echo "No build assets found; skipping release."
          fi

      - name: Create GitHub Release
        if: steps.check.outputs.found != '0'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: rn-${{ github.run_number }}
          name: "React Native build #${{ github.run_number }}"
          body: |
            Automated build for commit ${{ github.sha }}
            ${{ github.event.head_commit.message || '' }}
          prerelease: true
          files: |
            release-assets/**
